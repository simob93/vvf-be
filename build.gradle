import groovy.xml.MarkupBuilder


plugins {
	id 'org.springframework.boot' version '2.1.2.RELEASE'
	id 'java'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

group = 'it'
version = '1.0.0'
sourceCompatibility = '1.8'
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

processResources {
    filesMatching('application-prod.properties') {
        expand(project.properties)
    }
}

repositories {
	mavenCentral()
	jcenter()
    maven{url "http://jasperreports.sourceforge.net/maven2/"}
    maven{url "http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/"}
}

configurations {
    jasperreports {
        transitive = true
    }
}


bootJar {
    baseName = 'vvfriva'
    version =  '0.1.0'
}

gradle.projectsEvaluated {
    processResources.dependsOn(generateSomeAppResources)
}



dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    compile 'net.sf.jasperreports:jasperreports:5.6.0' exclude module:'olap4j'
    implementation group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.1.1.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.3.9.RELEASE'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.6.0'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.4.0'
    compile 'net.sf.jasperreports:jasperreports-fonts:6.0.0'
    compile 'joda-time:joda-time:2.10.6'
    implementation group: 'javax.mail', name: 'mail', version: '1.4.4'
    implementation group: 'javax.activation', name: 'activation', version: '1.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	jasperreports 'net.sf.jasperreports:jasperreports:5.6.0',
            'org.codehaus.groovy:groovy-all:2.3.6'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.google.code.gson:gson:2.8.6'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// <Context docBase="${catalina.base}/ws/vvfriva-0.0.1-SNAPSHOT.war" path="/vvfapi" reloadable="true" />
task generateSomeAppResources {
    ext.outputDir = new File(projectDir, "build/tomcat/")
    print("path is "+projectDir)
    doFirst {
        mkdir outputDir
        new File(outputDir, "vvf.xml").withWriter { writer ->
            def destXml = new MarkupBuilder(new IndentPrinter(writer, "    ", true, true))
            destXml.setDoubleQuotes(true)
            def destXmlMkp = destXml.getMkp()
            destXmlMkp.xmlDeclaration(version: "1.0", encoding: "utf-8")
            destXmlMkp.comment("Paremetri di configurazione tomcat")
            destXmlMkp.yield "\r\n"
            destXml.Context(
            	"docBase": "${'${vvf.home}'}/ws/${rootProject.name}-${version}.war",
            	"path": "/vvf",
            	"reloadable": "true"
            ) {
            	
            }
        }
    }
}


